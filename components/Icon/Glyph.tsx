type glyphProps = {
  glyph: string;
};

export const Glyph = ({ glyph }: glyphProps): any => {
  switch (glyph) {
    case "Twitter":
      return (
        <>
          <path
            d="M 10 0 C 15.523 0 20 4.477 20 10 C 20 15.523 15.523 20 10 20 C 4.477 20 0 15.523 0 10 C 0 4.477 4.477 0 10 0 Z"
            fill="#0bf"
          ></path>
          <path
            d="M 15.093 5.833 C 14.649 6.146 14.158 6.385 13.639 6.542 C 13.067 5.886 12.148 5.657 11.335 5.967 C 10.522 6.277 9.989 7.061 10 7.931 L 10 8.394 C 8.347 8.436 6.783 7.649 5.833 6.296 C 5.833 6.296 3.981 10.463 8.148 12.315 C 7.195 12.962 6.059 13.287 4.907 13.241 C 9.074 15.556 14.167 13.241 14.167 7.917 C 14.166 7.788 14.154 7.659 14.13 7.532 C 14.602 7.066 14.936 6.478 15.093 5.833 Z"
            fill="#fff"
          ></path>
        </>
      );
    case "Linkedin":
      return (
        <>
          <path
            d="M 10 0 C 15.523 0 20 4.477 20 10 C 20 15.523 15.523 20 10 20 C 4.477 20 0 15.523 0 10 C 0 4.477 4.477 0 10 0 Z"
            fill="#09e"
          ></path>
          <path
            d="M 7.249 7.639 L 5.249 7.639 C 5.183 7.639 5.12 7.665 5.073 7.712 C 5.026 7.758 5 7.822 5 7.888 L 5 14.386 C 5 14.523 5.111 14.636 5.249 14.636 L 7.249 14.636 C 7.386 14.636 7.498 14.524 7.498 14.386 L 7.498 7.888 C 7.498 7.822 7.472 7.758 7.425 7.712 C 7.379 7.665 7.315 7.639 7.249 7.639 Z M 6.239 6.638 C 6.924 6.638 7.479 6.078 7.479 5.388 C 7.479 4.698 6.924 4.139 6.239 4.139 C 5.555 4.139 5 4.698 5 5.388 C 5 6.078 5.555 6.638 6.239 6.638 Z M 13.25 14.635 L 14.75 14.635 C 14.887 14.635 14.999 14.523 15 14.385 L 15 10.187 C 15 8.302 13.936 7.387 12.446 7.387 C 11.852 7.366 11.276 7.597 10.861 8.022 C 10.805 8.087 10.715 8.11 10.634 8.08 C 10.554 8.05 10.501 7.973 10.501 7.887 C 10.501 7.821 10.475 7.757 10.428 7.711 C 10.381 7.664 10.317 7.638 10.251 7.638 L 8.753 7.638 C 8.686 7.638 8.623 7.664 8.576 7.711 C 8.529 7.757 8.502 7.821 8.502 7.887 L 8.502 14.385 C 8.502 14.522 8.614 14.635 8.753 14.635 L 10.251 14.635 C 10.389 14.635 10.501 14.523 10.501 14.385 L 10.501 10.636 C 10.501 9.946 11.061 9.386 11.751 9.386 C 12.441 9.386 13.001 9.946 13.001 10.636 L 13.001 14.385 C 13.001 14.522 13.112 14.635 13.25 14.635 Z"
            fill="#fff"
          ></path>
        </>
      );
    case "Email":
      return (
        <>
          <path
            d="M 10 0 C 15.523 0 20 4.477 20 10 C 20 15.523 15.523 20 10 20 C 4.477 20 0 15.523 0 10 C 0 4.477 4.477 0 10 0 Z"
            fill="#66f"
          ></path>
          <path
            d="M 5.412 7.951 C 5.079 7.743 4.925 7.338 5.035 6.961 C 5.146 6.584 5.493 6.326 5.886 6.33 L 14.121 6.33 C 14.511 6.331 14.854 6.589 14.963 6.964 C 15.073 7.338 14.922 7.74 14.594 7.951 L 10.735 10.407 C 10.288 10.69 9.718 10.69 9.271 10.407 Z M 11.222 11.174 L 14.652 8.991 C 14.721 8.947 14.81 8.944 14.882 8.985 C 14.955 9.024 15 9.1 15 9.183 L 15 12.236 C 14.999 12.988 14.39 13.598 13.637 13.599 L 6.368 13.6 C 5.616 13.599 5.006 12.988 5.005 12.236 L 5.005 9.183 C 5.005 9.003 5.203 8.895 5.354 8.991 L 8.783 11.173 C 9.527 11.648 10.478 11.648 11.222 11.173 Z"
            fill="#fff"
          ></path>
        </>
      );

    case "Dribbble":
      return (
        <>
          <path
            d="M 10 0 C 15.523 0 20 4.477 20 10 C 20 15.523 15.523 20 10 20 C 4.477 20 0 15.523 0 10 C 0 4.477 4.477 0 10 0 Z"
            fill="#e69"
          ></path>
          <path
            d="M 10 4 C 6.686 4 4 6.687 4 10 C 4 13.313 6.686 16 10 16 C 13.314 16 16 13.313 16 10 C 16 6.687 13.314 4 10 4 Z M 14.943 9.721 C 13.655 9.51 12.471 9.498 11.391 9.684 C 11.269 9.401 11.142 9.121 11.008 8.844 C 12.163 8.344 13.09 7.665 13.782 6.803 C 14.476 7.623 14.884 8.648 14.943 9.721 Z M 13.021 6.079 C 12.419 6.856 11.588 7.471 10.529 7.919 C 10.011 6.974 9.428 6.065 8.785 5.2 C 9.182 5.098 9.59 5.045 10 5.043 C 11.137 5.043 12.184 5.433 13.021 6.079 Z M 7.764 5.583 C 8.417 6.436 9.008 7.335 9.532 8.273 C 8.317 8.631 6.867 8.814 5.19 8.826 C 5.535 7.422 6.475 6.238 7.764 5.583 Z M 5.043 10 L 5.05 9.872 C 6.974 9.869 8.634 9.648 10.025 9.211 C 10.141 9.449 10.253 9.687 10.36 9.927 C 8.67 10.456 7.277 11.538 6.191 13.167 C 5.449 12.279 5.043 11.158 5.043 10 Z M 6.958 13.905 C 7.943 12.361 9.199 11.356 10.757 10.892 C 11.22 12.098 11.562 13.347 11.778 14.622 C 10.104 15.267 8.302 14.955 6.958 13.905 Z M 12.751 14.12 C 12.532 12.945 12.211 11.791 11.791 10.672 C 12.729 10.539 13.761 10.573 14.891 10.769 C 14.675 12.136 13.9 13.35 12.751 14.12 Z"
            fill="#fff"
          ></path>
        </>
      );

    case "ChevronDown":
      return (
        <path
          d="M 6.8 8.8 L 10 12 L 13.2 8.8"
          fill="transparent"
          strokeWidth="2"
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
        ></path>
      );

    case "Logo":
      return (
        <>
          <path
            d="M 15 3 L 9 3 C 5.686 3 3 5.686 3 9 L 3 9.375 C 3 12.481 5.519 15 8.625 15 L 8.625 15 C 11.731 15 14.25 12.481 14.25 9.375 L 14.25 6 L 9 6 C 7.343 6 6 7.343 6 9 L 6 9.375 C 6 10.825 7.175 12 8.625 12 L 8.625 12 C 10.075 12 11.25 10.825 11.25 9.375 L 11.25 9 L 9 9"
            fill="transparent"
            strokeWidth="1.5"
            stroke="currentColor"
            strokeMiterlimit="10"
          ></path>
          <path
            d="M 9 8.25 C 9.414 8.25 9.75 8.586 9.75 9 C 9.75 9.414 9.414 9.75 9 9.75 C 8.586 9.75 8.25 9.414 8.25 9 C 8.25 8.586 8.586 8.25 9 8.25 Z"
            fill="currentColor"
          ></path>
        </>
      );
    default:
      return undefined;
  }
};
