{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/georgemaine/Sites/georgemaine/pages/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  top: 0;\\n  background-color: #fafafa;\\n  color: #111;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nvar menuListItems = [\"Slide 0\", \"Slide 1\", \"Slide 2\", \"Slide 3\", \"Slide 4\", \"Slide 5\"];\nexport default _s2(function () {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  var _useState = useState(0),\n      activeMenuItem = _useState[0],\n      setActiveMenuItem = _useState[1];\n\n  function handleIndexChange(index) {\n    var slideNumber = index;\n    var nextSlide = slideNumber + 1;\n    setActiveMenuItem(nextSlide);\n  }\n\n  function useKeyPress(targetKey) {\n    _s();\n\n    // State for keeping track of whether key is pressed\n    var _useState2 = useState(false),\n        keyPressed = _useState2[0],\n        setKeyPressed = _useState2[1]; // If pressed key is our target key then set to true\n\n\n    function downHandler(_ref) {\n      var key = _ref.key;\n      console.log(key);\n\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    } // If released key is our target key then set to false\n\n\n    var upHandler = function upHandler(_ref2) {\n      var key = _ref2.key;\n\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    }; // Add event listeners\n\n\n    useEffect(function () {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n      return function () {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return keyPressed;\n  }\n\n  _s(useKeyPress, \"vmDSD7h68k9Z7B48/eX82jyokKU=\");\n\n  var happyPress = useKeyPress(\"ArrowLeft\");\n  var robotPress = useKeyPress(\"ArrowRight\");\n  return __jsx(React.Fragment, null, robotPress && handleIndexChange(activeMenuItem), __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(StickyNavigation, {\n    name: \"Georgemaine Lourens\",\n    role: \"Product Designer\",\n    list: menuListItems,\n    button: \"Get in touch\",\n    active: activeMenuItem,\n    onClick: handleIndexChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(Slides, {\n    active: activeMenuItem,\n    list: menuListItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}, \"bZa5C2b6vbDVnsKmee3RN+z62eo=\", false, function () {\n  return [useKeyPress, useKeyPress];\n});\n\nfunction Slides(_ref3) {\n  var _this2 = this;\n\n  var list = _ref3.list,\n      active = _ref3.active;\n  return __jsx(motion.ul, {\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, list.map(function (listItem, index) {\n    return __jsx(motion.li, {\n      animate: {\n        opacity: index === active ? 1 : 0,\n        x: active === index ? \"0vw\" : index < active ? \"-100vw\" : index > active ? \"calc(\".concat(index - active, \" * 100vw)\") : \"calc(\".concat(index, \" * 100vw)\"),\n        scale: index === active ? 1 : 0.8\n      },\n      key: index,\n      transition: {\n        type: \"spring\",\n        damping: 200,\n        stiffness: 300\n      },\n      style: {\n        cursor: \"grab\",\n        display: \"inline-block\",\n        position: \"fixed\",\n        top: 168,\n        right: 0,\n        left: 0,\n        bottom: 0,\n        textAlign: \"center\",\n        background: \"var(--red)\"\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, listItem));\n  }));\n}\n\n_c = Slides;\nexport var Wrapper = styled.main(_templateObject());\n_c2 = Wrapper;\n\nvar wrap = function wrap(min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n}; // Hook\n\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slides\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/georgemaine/Sites/georgemaine/pages/index.tsx"],"names":["styled","useState","useEffect","motion","StickyNavigation","menuListItems","activeMenuItem","setActiveMenuItem","handleIndexChange","index","slideNumber","nextSlide","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","key","console","log","upHandler","window","addEventListener","removeEventListener","happyPress","robotPress","Slides","list","active","margin","padding","map","listItem","opacity","x","scale","type","damping","stiffness","cursor","display","position","top","right","left","bottom","textAlign","background","Wrapper","main","wrap","min","max","v","rangeSize"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nconst menuListItems = [\n  \"Slide 0\",\n  \"Slide 1\",\n  \"Slide 2\",\n  \"Slide 3\",\n  \"Slide 4\",\n  \"Slide 5\",\n];\n\nexport default () => {\n  const [activeMenuItem, setActiveMenuItem] = useState(0);\n  function handleIndexChange(index: number) {\n    const slideNumber = index;\n    const nextSlide = slideNumber + 1;\n    setActiveMenuItem(nextSlide);\n  }\n\n  function useKeyPress(targetKey) {\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    // If pressed key is our target key then set to true\n    function downHandler({ key }) {\n      console.log(key);\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    // Add event listeners\n    useEffect(() => {\n      window.addEventListener(\"keydown\", downHandler);\n      window.addEventListener(\"keyup\", upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener(\"keydown\", downHandler);\n        window.removeEventListener(\"keyup\", upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return keyPressed;\n  }\n\n  const happyPress = useKeyPress(\"ArrowLeft\");\n  const robotPress = useKeyPress(\"ArrowRight\");\n\n  return (\n    <>\n      {robotPress && handleIndexChange(activeMenuItem)}\n\n      <Wrapper>\n        <StickyNavigation\n          name=\"Georgemaine Lourens\"\n          role=\"Product Designer\"\n          list={menuListItems}\n          button=\"Get in touch\"\n          active={activeMenuItem}\n          onClick={handleIndexChange}\n        />\n        <Slides active={activeMenuItem} list={menuListItems} />\n      </Wrapper>\n    </>\n  );\n};\n\ninterface SlidesProps {\n  list: string[];\n  active: number;\n}\n\nfunction Slides({ list, active }: SlidesProps) {\n  return (\n    <motion.ul\n      style={{\n        margin: 0,\n        padding: 0,\n      }}\n    >\n      {list.map((listItem, index) => {\n        return (\n          <motion.li\n            animate={{\n              opacity: index === active ? 1 : 0,\n              x:\n                active === index\n                  ? `0vw`\n                  : index < active\n                  ? `-100vw`\n                  : index > active\n                  ? `calc(${index - active} * 100vw)`\n                  : `calc(${index} * 100vw)`,\n              scale: index === active ? 1 : 0.8,\n            }}\n            key={index}\n            transition={{\n              type: \"spring\",\n              damping: 200,\n              stiffness: 300,\n            }}\n            style={{\n              cursor: \"grab\",\n              display: \"inline-block\",\n              position: \"fixed\",\n              top: 168,\n              right: 0,\n              left: 0,\n              bottom: 0,\n              textAlign: \"center\",\n              background: \"var(--red)\",\n            }}\n          >\n            <h1>{listItem}</h1>\n          </motion.li>\n        );\n      })}\n    </motion.ul>\n  );\n}\n\nexport const Wrapper = styled.main`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fafafa;\n  color: #111;\n`;\n\nconst wrap = (min: number, max: number, v: number) => {\n  const rangeSize = max - min;\n  return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\n// Hook\n"]},"metadata":{},"sourceType":"module"}