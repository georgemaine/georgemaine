{"ast":null,"code":"var _jsxFileName = \"/Users/georgemaine/Sites/georgemaine/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nconst menuListItems = [\"Slide 0\", \"Slide 1\", \"Slide 2\", \"Slide 3\", \"Slide 4\", \"Slide 5\"];\nexport default (() => {\n  const {\n    0: activeMenuItem,\n    1: setActiveMenuItem\n  } = useState(0);\n\n  function handleIndexChange(index) {\n    setActiveMenuItem(index);\n  }\n\n  function handleArrowNavigation(index) {\n    setActiveMenuItem(index + 1);\n  }\n\n  useEffect(() => {\n    console.log(handleIndexChange(activeMenuItem - 1));\n  });\n  const happyPress = useKeyPress(\"ArrowLeft\");\n  const robotPress = useKeyPress(\"ArrowRight\");\n  return __jsx(React.Fragment, null, happyPress && handleIndexChange(activeMenuItem - 1), robotPress && handleArrowNavigation(activeMenuItem + 1), __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(StickyNavigation, {\n    name: \"Georgemaine Lourens\",\n    role: \"Product Designer\",\n    list: menuListItems,\n    button: \"Get in touch\",\n    active: activeMenuItem,\n    onClick: handleIndexChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(Slides, {\n    active: activeMenuItem,\n    list: menuListItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n});\n\nfunction Slides({\n  list,\n  active\n}) {\n  return __jsx(motion.ul, {\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, list.map((listItem, index) => {\n    return __jsx(motion.li, {\n      animate: {\n        opacity: index === active ? 1 : 0,\n        x: active === index ? `0vw` : index < active ? `-100vw` : index > active ? `calc(${index - active} * 100vw)` : `calc(${index} * 100vw)`,\n        scale: index === active ? 1 : 0.8\n      },\n      key: index,\n      transition: {\n        type: \"spring\",\n        damping: 74,\n        stiffness: 120\n      },\n      style: {\n        cursor: \"grab\",\n        display: \"inline-block\",\n        position: \"fixed\",\n        top: 168,\n        right: 0,\n        left: 0,\n        bottom: 0,\n        textAlign: \"center\",\n        background: \"var(--red)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, listItem));\n  }));\n}\n\nexport const Wrapper = styled.main`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fafafa;\n  color: #111;\n`; // Hook\n\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const {\n    0: keyPressed,\n    1: setKeyPressed\n  } = useState(false); // If pressed key is our target key then set to true\n\n  function downHandler({\n    key\n  }) {\n    console.log(key);\n\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; // Add event listeners\n\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","map":{"version":3,"sources":["/Users/georgemaine/Sites/georgemaine/pages/index.tsx"],"names":["styled","useState","useEffect","motion","StickyNavigation","menuListItems","activeMenuItem","setActiveMenuItem","handleIndexChange","index","handleArrowNavigation","console","log","happyPress","useKeyPress","robotPress","Slides","list","active","margin","padding","map","listItem","opacity","x","scale","type","damping","stiffness","cursor","display","position","top","right","left","bottom","textAlign","background","Wrapper","main","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nconst menuListItems = [\n  \"Slide 0\",\n  \"Slide 1\",\n  \"Slide 2\",\n  \"Slide 3\",\n  \"Slide 4\",\n  \"Slide 5\",\n];\n\nexport default () => {\n  const [activeMenuItem, setActiveMenuItem] = useState(0);\n  function handleIndexChange(index: number) {\n    setActiveMenuItem(index);\n  }\n  function handleArrowNavigation(index: number) {\n    setActiveMenuItem(index + 1);\n  }\n  useEffect(() => {\n    console.log(handleIndexChange(activeMenuItem - 1));\n  });\n\n  const happyPress = useKeyPress(\"ArrowLeft\");\n  const robotPress = useKeyPress(\"ArrowRight\");\n\n  return (\n    <>\n      {happyPress && handleIndexChange(activeMenuItem - 1)}\n      {robotPress && handleArrowNavigation(activeMenuItem + 1)}\n      <Wrapper>\n        <StickyNavigation\n          name=\"Georgemaine Lourens\"\n          role=\"Product Designer\"\n          list={menuListItems}\n          button=\"Get in touch\"\n          active={activeMenuItem}\n          onClick={handleIndexChange}\n        />\n        <Slides active={activeMenuItem} list={menuListItems} />\n      </Wrapper>\n    </>\n  );\n};\n\ninterface SlidesProps {\n  list: string[];\n  active: number;\n}\n\nfunction Slides({ list, active }: SlidesProps) {\n  return (\n    <motion.ul\n      style={{\n        margin: 0,\n        padding: 0,\n      }}\n    >\n      {list.map((listItem, index) => {\n        return (\n          <motion.li\n            animate={{\n              opacity: index === active ? 1 : 0,\n              x:\n                active === index\n                  ? `0vw`\n                  : index < active\n                  ? `-100vw`\n                  : index > active\n                  ? `calc(${index - active} * 100vw)`\n                  : `calc(${index} * 100vw)`,\n              scale: index === active ? 1 : 0.8,\n            }}\n            key={index}\n            transition={{\n              type: \"spring\",\n              damping: 74,\n              stiffness: 120,\n            }}\n            style={{\n              cursor: \"grab\",\n              display: \"inline-block\",\n              position: \"fixed\",\n              top: 168,\n              right: 0,\n              left: 0,\n              bottom: 0,\n              textAlign: \"center\",\n              background: \"var(--red)\",\n            }}\n          >\n            <h1>{listItem}</h1>\n          </motion.li>\n        );\n      })}\n    </motion.ul>\n  );\n}\n\nexport const Wrapper = styled.main`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fafafa;\n  color: #111;\n`;\n\n// Hook\nfunction useKeyPress(targetKey) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  function downHandler({ key }) {\n    console.log(key);\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = ({ key }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n"]},"metadata":{},"sourceType":"module"}