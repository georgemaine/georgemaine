{"ast":null,"code":"import styled, { css } from \"styled-components\";\nimport { OpaqueButton } from \"../Button\";\nimport { motion } from \"framer-motion\";\nconst segmentNavItemHeight = \"28px\";\nconst segmentNavItemWidth = [125, 119, 139, 144, 72];\nconst segmentNavMaxWidth = segmentNavItemWidth[0] + segmentNavItemWidth[1] + segmentNavItemWidth[2] + segmentNavItemWidth[3] + segmentNavItemWidth[4];\nconst segmentNavItemXPosition = [0, segmentNavItemWidth[0], segmentNavItemWidth[0] + segmentNavItemWidth[1], segmentNavItemWidth[0] + segmentNavItemWidth[1] + segmentNavItemWidth[2]];\nexport const SegmentNavSelectionBackgroundVariants = {\n  first: {\n    x: segmentNavItemXPosition[0],\n    width: segmentNavItemWidth[0]\n  },\n  second: {\n    x: segmentNavItemXPosition[1],\n    width: segmentNavItemWidth[1]\n  },\n  third: {\n    x: segmentNavItemXPosition[2],\n    width: segmentNavItemWidth[2]\n  },\n  fourth: {\n    x: segmentNavItemXPosition[3],\n    width: segmentNavItemWidth[3]\n  }\n};\nconst Base = css`\n  background-color: var(--blurBg);\n  border-radius: 18px;\n  -webkit-backdrop-filter: var(--blur);\n  backdrop-filter: var(--blur);\n  -webkit-filter: var(--saturate);\n  filter: var(--saturate);\n  font-family: inherit;\n  font-weight: 600;\n  height: ${segmentNavItemHeight};\n  border: 2px solid transparent;\n  display: flex;\n`;\nexport const SegmentNavDesktopTabList = styled.ul`\n  display: none;\n\n  @media (min-width: 1024px) {\n    ${Base}\n    position: relative;\n    align-items: center;\n    padding: 0;\n    overflow: hidden;\n  }\n`;\nexport const SegmentNavContainer = styled.footer`\n  position: fixed;\n  z-index: 2;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  bottom: 24px;\n  height: 32px;\n  padding: 0 24px;\n  display: flex;\n  justify-content: center;\n\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\nexport const SegmentNavTabList = styled.div`\n  ${Base}\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow-x: auto;\n  overflow-y: hidden;\n  align-items: center;\n  max-width: ${segmentNavMaxWidth};\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media only screen and (min-width: 648px) {\n    margin: 0 auto;\n  }\n`;\nexport const SegmentNavSelectionBackground = styled(motion.div)`\n  position: absolute;\n  z-index: 1;\n  height: ${segmentNavItemHeight};\n  border-radius: 16px;\n\n  @media screen and (prefers-color-scheme: dark) {\n    background-color: var(--white);\n  }\n\n  @media screen and (prefers-color-scheme: light) {\n    background-color: var(--black);\n  }\n\n  @media only screen and (min-width: 1024px) {\n    height: ${segmentNavItemHeight};\n  }\n`;\nexport const SegmentNavDesktopItem = styled(OpaqueButton)`\n  max-width: fit-content;\n  line-height: 1.2307692308;\n\n  @media screen and (prefers-color-scheme: light) {\n    color: ${props => props.isAnimated ? \"var(--primaryTextLight)\" : \"primaryTextDark\"};\n  }\n\n  @media screen and (prefers-color-scheme: dark) {\n    color: ${props => props.isAnimated ? \"var(--primaryTextDark)\" : \"var(--primaryTextLight)\"};\n  }\n`;\nexport const SegmentNavMobileItem = styled(OpaqueButton)`\n  min-width: initial;\n  line-height: 1.2307692308;\n\n  @media screen and (prefers-color-scheme: light) {\n    color: ${props => props.isAnimated ? \"var(--primaryTextLight)\" : \"primaryTextDark\"};\n  }\n\n  @media screen and (prefers-color-scheme: dark) {\n    color: ${props => props.isAnimated ? \"var(--primaryTextDark)\" : \"var(--primaryTextLight)\"};\n  }\n`;","map":{"version":3,"sources":["/Users/georgemaine/Sites/georgemaine/black-mamba/components/SegmentedNav/style.tsx"],"names":["styled","css","OpaqueButton","motion","segmentNavItemHeight","segmentNavItemWidth","segmentNavMaxWidth","segmentNavItemXPosition","SegmentNavSelectionBackgroundVariants","first","x","width","second","third","fourth","Base","SegmentNavDesktopTabList","ul","SegmentNavContainer","footer","SegmentNavTabList","div","SegmentNavSelectionBackground","SegmentNavDesktopItem","props","isAnimated","SegmentNavMobileItem"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,MAAMC,oBAAoB,GAAG,MAA7B;AACA,MAAMC,mBAAmB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,EAArB,CAA5B;AACA,MAAMC,kBAAkB,GACtBD,mBAAmB,CAAC,CAAD,CAAnB,GACAA,mBAAmB,CAAC,CAAD,CADnB,GAEAA,mBAAmB,CAAC,CAAD,CAFnB,GAGAA,mBAAmB,CAAC,CAAD,CAHnB,GAG0BA,mBAAmB,CAAC,CAAD,CAJ/C;AAKA,MAAME,uBAAuB,GAAG,CAC9B,CAD8B,EAE9BF,mBAAmB,CAAC,CAAD,CAFW,EAG9BA,mBAAmB,CAAC,CAAD,CAAnB,GAAyBA,mBAAmB,CAAC,CAAD,CAHd,EAI9BA,mBAAmB,CAAC,CAAD,CAAnB,GAAyBA,mBAAmB,CAAC,CAAD,CAA5C,GAAkDA,mBAAmB,CAAC,CAAD,CAJvC,CAAhC;AAOA,OAAO,MAAMG,qCAAqC,GAAG;AACnDC,EAAAA,KAAK,EAAE;AACLC,IAAAA,CAAC,EAAEH,uBAAuB,CAAC,CAAD,CADrB;AAELI,IAAAA,KAAK,EAAEN,mBAAmB,CAAC,CAAD;AAFrB,GAD4C;AAKnDO,EAAAA,MAAM,EAAE;AACNF,IAAAA,CAAC,EAAEH,uBAAuB,CAAC,CAAD,CADpB;AAENI,IAAAA,KAAK,EAAEN,mBAAmB,CAAC,CAAD;AAFpB,GAL2C;AASnDQ,EAAAA,KAAK,EAAE;AACLH,IAAAA,CAAC,EAAEH,uBAAuB,CAAC,CAAD,CADrB;AAELI,IAAAA,KAAK,EAAEN,mBAAmB,CAAC,CAAD;AAFrB,GAT4C;AAanDS,EAAAA,MAAM,EAAE;AACNJ,IAAAA,CAAC,EAAEH,uBAAuB,CAAC,CAAD,CADpB;AAENI,IAAAA,KAAK,EAAEN,mBAAmB,CAAC,CAAD;AAFpB;AAb2C,CAA9C;AAmBP,MAAMU,IAAI,GAAGd,GAAI;;;;;;;;;YASLG,oBAAqB;;;CATjC;AAcA,OAAO,MAAMY,wBAAwB,GAAGhB,MAAM,CAACiB,EAAG;;;;MAI5CF,IAAK;;;;;;CAJJ;AAYP,OAAO,MAAMG,mBAAmB,GAAGlB,MAAM,CAACmB,MAAO;;;;;;;;;;;;;;;CAA1C;AAiBP,OAAO,MAAMC,iBAAiB,GAAGpB,MAAM,CAACqB,GAAI;IACxCN,IAAK;;;;;;eAMMT,kBAAmB;;;;;;;;;CAP3B;AAkBP,OAAO,MAAMgB,6BAA6B,GAAGtB,MAAM,CAACG,MAAM,CAACkB,GAAR,CAAa;;;YAGpDjB,oBAAqB;;;;;;;;;;;;cAYnBA,oBAAqB;;CAf5B;AAmBP,OAAO,MAAMmB,qBAAqB,GAAGvB,MAAM,CAACE,YAAD,CAAe;;;;;aAK5CsB,KAAD,IACPA,KAAK,CAACC,UAAN,GAAmB,yBAAnB,GAA+C,iBAAkB;;;;aAIzDD,KAAD,IACPA,KAAK,CAACC,UAAN,GAAmB,wBAAnB,GAA8C,yBAA0B;;CAXvE;AAeP,OAAO,MAAMC,oBAAoB,GAAG1B,MAAM,CAACE,YAAD,CAAe;;;;;aAK3CsB,KAAD,IACPA,KAAK,CAACC,UAAN,GAAmB,yBAAnB,GAA+C,iBAAkB;;;;aAIzDD,KAAD,IACPA,KAAK,CAACC,UAAN,GAAmB,wBAAnB,GAA8C,yBAA0B;;CAXvE","sourcesContent":["import styled, { css } from \"styled-components\";\nimport { OpaqueButton } from \"../Button\";\nimport { motion } from \"framer-motion\";\n\nconst segmentNavItemHeight = \"28px\";\nconst segmentNavItemWidth = [125, 119, 139, 144, 72];\nconst segmentNavMaxWidth =\n  segmentNavItemWidth[0] +\n  segmentNavItemWidth[1] +\n  segmentNavItemWidth[2] +\n  segmentNavItemWidth[3] +  segmentNavItemWidth[4];\nconst segmentNavItemXPosition = [\n  0,\n  segmentNavItemWidth[0],\n  segmentNavItemWidth[0] + segmentNavItemWidth[1],\n  segmentNavItemWidth[0] + segmentNavItemWidth[1] + segmentNavItemWidth[2],\n];\n\nexport const SegmentNavSelectionBackgroundVariants = {\n  first: {\n    x: segmentNavItemXPosition[0],\n    width: segmentNavItemWidth[0],\n  },\n  second: {\n    x: segmentNavItemXPosition[1],\n    width: segmentNavItemWidth[1],\n  },\n  third: {\n    x: segmentNavItemXPosition[2],\n    width: segmentNavItemWidth[2],\n  },\n  fourth: {\n    x: segmentNavItemXPosition[3],\n    width: segmentNavItemWidth[3],\n  },\n};\n\nconst Base = css`\n  background-color: var(--blurBg);\n  border-radius: 18px;\n  -webkit-backdrop-filter: var(--blur);\n  backdrop-filter: var(--blur);\n  -webkit-filter: var(--saturate);\n  filter: var(--saturate);\n  font-family: inherit;\n  font-weight: 600;\n  height: ${segmentNavItemHeight};\n  border: 2px solid transparent;\n  display: flex;\n`;\n\nexport const SegmentNavDesktopTabList = styled.ul`\n  display: none;\n\n  @media (min-width: 1024px) {\n    ${Base}\n    position: relative;\n    align-items: center;\n    padding: 0;\n    overflow: hidden;\n  }\n`;\n\nexport const SegmentNavContainer = styled.footer`\n  position: fixed;\n  z-index: 2;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n  bottom: 24px;\n  height: 32px;\n  padding: 0 24px;\n  display: flex;\n  justify-content: center;\n\n  @media (min-width: 1024px) {\n    display: none;\n  }\n`;\n\nexport const SegmentNavTabList = styled.div`\n  ${Base}\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow-x: auto;\n  overflow-y: hidden;\n  align-items: center;\n  max-width: ${segmentNavMaxWidth};\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media only screen and (min-width: 648px) {\n    margin: 0 auto;\n  }\n`;\n\nexport const SegmentNavSelectionBackground = styled(motion.div)`\n  position: absolute;\n  z-index: 1;\n  height: ${segmentNavItemHeight};\n  border-radius: 16px;\n\n  @media screen and (prefers-color-scheme: dark) {\n    background-color: var(--white);\n  }\n\n  @media screen and (prefers-color-scheme: light) {\n    background-color: var(--black);\n  }\n\n  @media only screen and (min-width: 1024px) {\n    height: ${segmentNavItemHeight};\n  }\n`;\n\nexport const SegmentNavDesktopItem = styled(OpaqueButton)`\n  max-width: fit-content;\n  line-height: 1.2307692308;\n\n  @media screen and (prefers-color-scheme: light) {\n    color: ${(props) =>\n      props.isAnimated ? \"var(--primaryTextLight)\" : \"primaryTextDark\"};\n  }\n\n  @media screen and (prefers-color-scheme: dark) {\n    color: ${(props) =>\n      props.isAnimated ? \"var(--primaryTextDark)\" : \"var(--primaryTextLight)\"};\n  }\n`;\n\nexport const SegmentNavMobileItem = styled(OpaqueButton)`\n  min-width: initial;\n  line-height: 1.2307692308;\n\n  @media screen and (prefers-color-scheme: light) {\n    color: ${(props) =>\n      props.isAnimated ? \"var(--primaryTextLight)\" : \"primaryTextDark\"};\n  }\n\n  @media screen and (prefers-color-scheme: dark) {\n    color: ${(props) =>\n      props.isAnimated ? \"var(--primaryTextDark)\" : \"var(--primaryTextLight)\"};\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}