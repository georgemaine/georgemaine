{"ast":null,"code":"var _jsxFileName = \"/Users/georgemaine/Sites/georgemaine/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nconst Pages = [\"Page 0\", \"Page 1\", \"Page 2\", \"Page 3\", \"Page 4\", \"Page 5\"];\nexport default (() => {\n  const {\n    0: page,\n    1: setPage\n  } = useState(0);\n  const slideIndex = wrap(0, Pages.length, page);\n\n  function handleIndexChange(index) {\n    setPage(index);\n  }\n\n  function paginate(direction) {\n    setPage(page + direction);\n  }\n\n  const ArrowRightDown = useKeyPress(\"ArrowRight\");\n  useEffect(() => {\n    ArrowRightDown && paginate(1);\n  }, [ArrowRightDown]);\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(StickyNavigation, {\n    name: \"Georgemaine Lourens\",\n    role: \"Product Designer\",\n    list: Pages,\n    button: \"Get in touch\",\n    active: slideIndex,\n    onClick: handleIndexChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(Slides, {\n    active: slideIndex,\n    list: Pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n});\n\nconst wrap = (min, max, v) => {\n  const rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nexport function useKeyPress(targetKey, onPressDown = () => {}, onPressUp = () => {}) {\n  // State for keeping track of whether key is pressed\n  const {\n    0: keyPressed,\n    1: setKeyPressed\n  } = useState(false);\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({\n      key\n    }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n        onPressDown();\n      }\n    } // If released key is our target key then set to false\n\n\n    const upHandler = ({\n      key\n    }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n        onPressUp();\n      }\n    }; // Add event listeners\n\n\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n  return keyPressed;\n}\n\nfunction Slides({\n  list,\n  active\n}) {\n  return __jsx(motion.ul, {\n    style: {\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, list.map((listItem, index) => {\n    return __jsx(motion.li, {\n      animate: {\n        opacity: index === active ? 1 : 0,\n        x: active === index ? `0vw` : index < active ? `-100vw` : index > active ? `calc(${index - active} * 100vw)` : `calc(${index} * 100vw)`,\n        scale: index === active ? 1 : 0.8\n      },\n      key: index,\n      transition: {\n        type: \"spring\",\n        damping: 74,\n        stiffness: 120\n      },\n      style: {\n        cursor: \"grab\",\n        display: \"inline-block\",\n        position: \"fixed\",\n        top: 168,\n        right: 0,\n        left: 0,\n        bottom: 0,\n        textAlign: \"center\",\n        background: \"var(--red)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, listItem));\n  }));\n}\n\nexport const Wrapper = styled.main`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fafafa;\n  color: #111;\n`;","map":{"version":3,"sources":["/Users/georgemaine/Sites/georgemaine/pages/index.tsx"],"names":["styled","useState","useEffect","motion","StickyNavigation","Pages","page","setPage","slideIndex","wrap","length","handleIndexChange","index","paginate","direction","ArrowRightDown","useKeyPress","min","max","v","rangeSize","targetKey","onPressDown","onPressUp","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener","Slides","list","active","margin","padding","map","listItem","opacity","x","scale","type","damping","stiffness","cursor","display","position","top","right","left","bottom","textAlign","background","Wrapper","main"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { StickyNavigation } from \"../components/Navigation\";\nconst Pages = [\"Page 0\", \"Page 1\", \"Page 2\", \"Page 3\", \"Page 4\", \"Page 5\"];\n\nexport default () => {\n  const [page, setPage] = useState(0);\n  const slideIndex = wrap(0, Pages.length, page);\n  function handleIndexChange(index: number) {\n    setPage(index);\n  }\n\n  function paginate(direction: number) {\n    setPage(page + direction);\n  }\n  const ArrowRightDown = useKeyPress(\"ArrowRight\");\n  useEffect(() => {\n    ArrowRightDown && paginate(1);\n  }, [ArrowRightDown]);\n  return (\n    <Wrapper>\n      <StickyNavigation\n        name=\"Georgemaine Lourens\"\n        role=\"Product Designer\"\n        list={Pages}\n        button=\"Get in touch\"\n        active={slideIndex}\n        onClick={handleIndexChange}\n      />\n      <Slides active={slideIndex} list={Pages} />\n    </Wrapper>\n  );\n};\n\ninterface SlidesProps {\n  list: string[];\n  active: number;\n}\n\nconst wrap = (min: number, max: number, v: number) => {\n  const rangeSize = max - min;\n  return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport function useKeyPress(\n  targetKey,\n  onPressDown = () => {},\n  onPressUp = () => {}\n) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n        onPressDown();\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n        onPressUp();\n      }\n    };\n\n    // Add event listeners\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler);\n\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  });\n\n  return keyPressed;\n}\n\nfunction Slides({ list, active }: SlidesProps) {\n  return (\n    <motion.ul\n      style={{\n        margin: 0,\n        padding: 0,\n      }}\n    >\n      {list.map((listItem, index) => {\n        return (\n          <motion.li\n            animate={{\n              opacity: index === active ? 1 : 0,\n              x:\n                active === index\n                  ? `0vw`\n                  : index < active\n                  ? `-100vw`\n                  : index > active\n                  ? `calc(${index - active} * 100vw)`\n                  : `calc(${index} * 100vw)`,\n              scale: index === active ? 1 : 0.8,\n            }}\n            key={index}\n            transition={{\n              type: \"spring\",\n              damping: 74,\n              stiffness: 120,\n            }}\n            style={{\n              cursor: \"grab\",\n              display: \"inline-block\",\n              position: \"fixed\",\n              top: 168,\n              right: 0,\n              left: 0,\n              bottom: 0,\n              textAlign: \"center\",\n              background: \"var(--red)\",\n            }}\n          >\n            <h1>{listItem}</h1>\n          </motion.li>\n        );\n      })}\n    </motion.ul>\n  );\n}\n\nexport const Wrapper = styled.main`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  background-color: #fafafa;\n  color: #111;\n`;\n"]},"metadata":{},"sourceType":"module"}