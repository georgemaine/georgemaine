{"ast":null,"code":"var _jsxFileName = \"/Users/georgemaine/Sites/georgemaine/components/Navigation/index.tsx\";\nvar __jsx = React.createElement;\nimport { StickyNavList, StickyNav } from \"./style\";\nimport { Label } from \"../Typography\";\nimport { Button, RedButton } from \"../Button\";\nimport React from \"react\"; // Declare Props\n\n// Create Function\nexport function StickyNavigation({\n  name,\n  role,\n  list,\n  button,\n  onClick,\n  active\n}) {\n  const convertedActive = active >= 1 && active <= 4 ? 1 : active === 5 ? 2 : active === 6 ? 3 : active;\n  React.useEffect(() => {\n    console.log(convertedActive);\n  });\n  return __jsx(StickyNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Label, {\n    color: \"#111\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, name), __jsx(Label, {\n    color: \"#bbb\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, role)), __jsx(StickyNavList, {\n    whileHover: {\n      backgroundColor: \"#f7f7f7\"\n    },\n    whileTap: {\n      backgroundColor: \"#e5e5e5\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, list.map((ListItem, index) => {\n    return __jsx(\"li\", {\n      key: index,\n      onClick: () => onClick(index === 2 ? 5 : index === 3 ? 6 : index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      style: {\n        opacity: index != convertedActive && 0.6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, ListItem));\n  })), __jsx(RedButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, button));\n}","map":{"version":3,"sources":["/Users/georgemaine/Sites/georgemaine/components/Navigation/index.tsx"],"names":["StickyNavList","StickyNav","Label","Button","RedButton","React","StickyNavigation","name","role","list","button","onClick","active","convertedActive","useEffect","console","log","backgroundColor","map","ListItem","index","opacity"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,SAAzC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,WAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAUA;AACA,OAAO,SAASC,gBAAT,CAA0B;AAC/BC,EAAAA,IAD+B;AAE/BC,EAAAA,IAF+B;AAG/BC,EAAAA,IAH+B;AAI/BC,EAAAA,MAJ+B;AAK/BC,EAAAA,OAL+B;AAM/BC,EAAAA;AAN+B,CAA1B,EAOY;AACjB,QAAMC,eAAe,GACnBD,MAAM,IAAI,CAAV,IAAeA,MAAM,IAAI,CAAzB,GACI,CADJ,GAEIA,MAAM,KAAK,CAAX,GACA,CADA,GAEAA,MAAM,KAAK,CAAX,GACA,CADA,GAEAA,MAPN;AASAP,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACD,GAFD;AAGA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IADH,CADF,EAIE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,CAJF,CADF,EASE,MAAC,aAAD;AACE,IAAA,UAAU,EAAE;AAAES,MAAAA,eAAe,EAAE;AAAnB,KADd;AAEE,IAAA,QAAQ,EAAE;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGR,IAAI,CAACS,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,WACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAE,MAAMT,OAAO,CAACS,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBA,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBA,KAArC,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAED,KAAK,IAAIP,eAAT,IAA4B;AAAvC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,QADH,CAJF,CADF;AAUD,GAXA,CAJH,CATF,EA0BE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYT,MAAZ,CA1BF,CADF;AA8BD","sourcesContent":["import { StickyNavList, StickyNav } from \"./style\";\nimport { Label } from \"../Typography\";\nimport { Button, RedButton } from \"../Button\";\nimport React from \"react\";\n\n// Declare Props\ninterface StickyNavProps {\n  name: string;\n  role: string;\n  list: string[];\n  button: string;\n  onClick: Function;\n  active: number;\n}\n\n// Create Function\nexport function StickyNavigation({\n  name,\n  role,\n  list,\n  button,\n  onClick,\n  active,\n}: StickyNavProps) {\n  const convertedActive =\n    active >= 1 && active <= 4\n      ? 1\n      : active === 5\n      ? 2\n      : active === 6\n      ? 3\n      : active;\n\n  React.useEffect(() => {\n    console.log(convertedActive);\n  });\n  return (\n    <StickyNav>\n      <div>\n        <Label color=\"#111\" align=\"left\">\n          {name}\n        </Label>\n        <Label color=\"#bbb\" align=\"left\">\n          {role}\n        </Label>\n      </div>\n      <StickyNavList\n        whileHover={{ backgroundColor: \"#f7f7f7\" }}\n        whileTap={{ backgroundColor: \"#e5e5e5\" }}\n      >\n        {list.map((ListItem, index) => {\n          return (\n            <li\n              key={index}\n              onClick={() => onClick(index === 2 ? 5 : index === 3 ? 6 : index)}\n            >\n              <Button style={{ opacity: index != convertedActive && 0.6 }}>\n                {ListItem}\n              </Button>\n            </li>\n          );\n        })}\n      </StickyNavList>\n      <RedButton>{button}</RedButton>\n    </StickyNav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}